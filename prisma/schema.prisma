// -- Active: 1729435694436@@127.0.0.1@5432@book-service
// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String            @id @default(uuid())
  name       String
  email      String            @unique
  password   String
  role       Role              @default(customer)
  contactNo  String?
  address    String?
  profileImg String?
  reviews    ReviewAndRating[]
  orders     Order[]

  @@map("users")
}

model Category {
  id    String @id @default(uuid())
  title String
  books Book[]

  @@map("categories")
}

model Book {
  id              String            @id @default(uuid())
  title           String
  author          String
  price           Int
  genre           String
  publicationDate String
  categoryId      String
  category        Category          @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  reviews         ReviewAndRating[]
  orderedBooks    OrderedBook[]

  @@map("books")
}

model ReviewAndRating {
  id     String @id @default(uuid())
  review String
  rating Rating
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  bookId String
  book   Book   @relation(fields: [bookId], references: [id], onDelete: Cascade)

  @@map("reviews_and_ratings")
}

model Order {
  id           String        @id @default(uuid())
  userId       String
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderedBooks OrderedBook[]
  status       OrderStatus?  @default(pending)
  createdAt    DateTime      @default(now())
  @@map("orders")
}

model OrderedBook {
  id       String @id @default(uuid())
  quantity Int
  bookId   String
  book     Book   @relation(fields: [bookId], references: [id])
  orderId  String
  order    Order  @relation(fields: [orderId], references: [id])
  @@map("orderedBooks")
}

enum Role {
  admin
  customer
}

enum Rating {
  ONE
  TWO
  THREE
  FOUR
  FIVE
}

enum OrderStatus {
  pending
  shipped
  delivered
}
